// <auto-generated />
using System;
using HelpDeskApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelpDeskApi.Migrations
{
    [DbContext(typeof(HelpDeskContext))]
    [Migration("20230329190152_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Chamado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEncerramento")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Chamados");
                });

            modelBuilder.Entity("Equipamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Hd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("LocalId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Memoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Processador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("HelpDeskApi.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("TipoUsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Local", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Locais");
                });

            modelBuilder.Entity("TipoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PodeAtualizar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PodeDeletar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PodeEscrever")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PodeLer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("Chamado", b =>
                {
                    b.HasOne("Local", "Local")
                        .WithMany("Chamados")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelpDeskApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Chamados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HelpDeskApi.Domain.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("ChamadoId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Texto")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Descricao");

                            b1.HasKey("ChamadoId");

                            b1.ToTable("Chamados");

                            b1.WithOwner()
                                .HasForeignKey("ChamadoId");
                        });

                    b.OwnsOne("HelpDeskApi.Domain.ValueObjects.Detalhes", "Detalhes", b1 =>
                        {
                            b1.Property<Guid>("ChamadoId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Equipamento")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Equipamento");

                            b1.Property<string>("LocalAnterior")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("LocalAnterior");

                            b1.Property<string>("QualTecnico")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("QualTecnico");

                            b1.Property<string>("Solucao")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Solucao");

                            b1.Property<string>("SubstituidoPor")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("SubstituidoPor");

                            b1.HasKey("ChamadoId");

                            b1.ToTable("Chamados");

                            b1.WithOwner()
                                .HasForeignKey("ChamadoId");
                        });

                    b.Navigation("Descricao")
                        .IsRequired();

                    b.Navigation("Detalhes")
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Equipamento", b =>
                {
                    b.HasOne("Local", "Local")
                        .WithMany("Equipamentos")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HelpDeskApi.Domain.ValueObjects.Fornecedor", "Fornecedor", b1 =>
                        {
                            b1.Property<Guid>("EquipamentoId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("NomeFornecedor");

                            b1.HasKey("EquipamentoId");

                            b1.ToTable("Equipamentos");

                            b1.WithOwner()
                                .HasForeignKey("EquipamentoId");

                            b1.OwnsOne("HelpDeskApi.Domain.ValueObjects.Cnpj", "CNPJ", b2 =>
                                {
                                    b2.Property<Guid>("FornecedorEquipamentoId")
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("Numero")
                                        .IsRequired()
                                        .HasColumnType("varchar(14)")
                                        .HasColumnName("CnpjFornecedor");

                                    b2.HasKey("FornecedorEquipamentoId");

                                    b2.ToTable("Equipamentos");

                                    b2.WithOwner()
                                        .HasForeignKey("FornecedorEquipamentoId");
                                });

                            b1.Navigation("CNPJ")
                                .IsRequired();
                        });

                    b.Navigation("Fornecedor")
                        .IsRequired();

                    b.Navigation("Local");
                });

            modelBuilder.Entity("HelpDeskApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Local", b =>
                {
                    b.OwnsOne("HelpDeskApi.Domain.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("LocalId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Numero");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Rua");

                            b1.HasKey("LocalId");

                            b1.ToTable("Locais");

                            b1.WithOwner()
                                .HasForeignKey("LocalId");

                            b1.OwnsOne("HelpDeskApi.Domain.ValueObjects.Cep", "CEP", b2 =>
                                {
                                    b2.Property<Guid>("EnderecoLocalId")
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("Numero")
                                        .IsRequired()
                                        .HasColumnType("varchar(150)")
                                        .HasColumnName("CEP");

                                    b2.HasKey("EnderecoLocalId");

                                    b2.ToTable("Locais");

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoLocalId");
                                });

                            b1.Navigation("CEP")
                                .IsRequired();
                        });

                    b.OwnsOne("HelpDeskApi.Domain.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("LocalId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Texto")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Descricao");

                            b1.HasKey("LocalId");

                            b1.ToTable("Locais");

                            b1.WithOwner()
                                .HasForeignKey("LocalId");
                        });

                    b.Navigation("Descricao")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("TipoUsuario", b =>
                {
                    b.OwnsOne("HelpDeskApi.Domain.ValueObjects.Descricao", "Descricao", b1 =>
                        {
                            b1.Property<Guid>("TipoUsuarioId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Texto")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("Descricao");

                            b1.HasKey("TipoUsuarioId");

                            b1.ToTable("TipoUsuarios");

                            b1.WithOwner()
                                .HasForeignKey("TipoUsuarioId");
                        });

                    b.Navigation("Descricao")
                        .IsRequired();
                });

            modelBuilder.Entity("HelpDeskApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Chamados");
                });

            modelBuilder.Entity("Local", b =>
                {
                    b.Navigation("Chamados");

                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
